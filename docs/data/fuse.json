{"keys":[{"path":["title"],"id":"title","weight":1,"src":"title"},{"path":["body"],"id":"body","weight":1,"src":"body"}],"records":[{"i":0,"$":{"0":{"v":"This page has not yet sprouted","n":0.408},"1":{"v":"[Dendron](https://dendron.so/) (the tool used to generate this site) lets authors selective publish content. You will see this page whenever you click on a link to an unpublished page\n\n![](https://foundation-prod-assetspublic53c57cce-8cpvgjldwysl.s3-us-west-2.amazonaws.com/assets/images/not-sprouted.png)","n":0.189}}},{"i":1,"$":{"0":{"v":"👾 Collections","n":0.707},"1":{"v":"\nThis is the root for your Dendron vault.\n\nIf you decide to publish your entire vault, it will be your landing page. You are free to customize any part of this page except the frontmatter at the top, between the `---`.\n","n":0.158}}},{"i":2,"$":{"0":{"v":"Tags","n":1}}},{"i":3,"$":{"0":{"v":"PROG","n":1}}},{"i":4,"$":{"0":{"v":"Nx","n":1}}},{"i":5,"$":{"0":{"v":"Dendron","n":1}}},{"i":6,"$":{"0":{"v":"Drops","n":1}}},{"i":7,"$":{"0":{"v":"2021-1227-從 Nx 入門 monorepo","n":0.5},"1":{"v":"\n## 前言\n\n> 深入淺出 Monorepo 架構 — 使用 Nx Console 實現一個 Monorepo 架構的專案\n\n導讀影片: [Monorepos - How the Pros Scale Huge Software Projects // Turborepo vs Nx](https://www.youtube.com/watch?v=9iU_IE6vnJ8)\n\n## 簡介 Monorepo 架構\n\nMonorepo (全名 Monolithic Repository)，符合以下三個條件:\n\n1. One Repository\n2. Multiple projects\n3. Shared Libraries\n\n如下圖，可以看到:\n\n1. **一個 repo**\n2. **多個 projects** (三個 app 加上兩個 libs)\n3. **共用 libs**\n\n![MonoRepo](assets/images/2021-12-27-22-50-05.png)\n\nMonorepo 架構的主要目的是希望集中管理套件版本。\n\n透過只管理一個 `package.json`，可以發現好處是套件版本管理方便、而壞處是一個 repo 有多個 projects，檔案容易變非常大，讓 git 版控軟體跑起來較吃力。\n\n另外 Monorepo 讓 apps 之間共用 libs 變得方便簡單，所以可以降低重複程式碼的機率。\n也可以讓 Lerna、yarn 等套件管理工具更方便的減少重複的套件安裝。\n\n而以 Nx 來說，更酷的特色是可以在同一個 repo 裡同時使用 react 和 angular 共同開發一個 app。\n\n雖然也可以使用 rollupjs 來達到不同前端框架共同開發一個 app 的效果。\n\n但 Nx 就像 monorepo 全家桶: 提供一個 Nx workspace 讓你的 monorepo 開發更容易。\n\n接下來，在看看 Nx 之前，先來一些先備知識 😆\n\n## 簡介 Nx 工具與專有名詞解釋\n\n### 什麼是 Nx ?\n\n官網: https://nx.dev/\n\n![](assets/images/2021-12-27-23-55-50.png)\n\n> Smart, Extensible Build Framework\n> Nx helps architect, test, build at any scale:\n\n- integrations with modern frameworks\n- computation caching\n- smart rebuilds of affected projects\n- distributed task execution\n- powerful code generators\n- editor support (VSCode, WebStorm)\n- GitHub apps\n- and more.\n\n### Nx 的製作團隊\n\nnarwhal 簡寫 Nrwl，是獨角鯨的英文。\n\n![](assets/images/2021-12-27-23-57-12.png)\n\nConsulting. Engineering. Training.\nNrwl was founded in December 2016 by Angular team members and former Googlers, Jeff Cross and Victor Savkin, and today has around 18 team members in the US, Canada and UK.\nNrwl is also the creator of open-source dev tools: Nx for monorepo development, and Angular Console.\n\n### Angular monorepo patterns\n\n這本書說明了 nx 是如何實踐 monerepo 概念\n\n![](assets/images/2021-12-27-23-59-52.png)\n\n- https://connect.nrwl.io/app/books\n- https://nrwl.io/products\n\n### Nx 與 Angular 淵源不淺\n\n![](assets/images/2021-12-28-00-06-48.png)\n\n上面這兩位 Nx 開發的主導者是 Google 的前員工，且對 Angular 都有相當深入的理解。\n但 Nx 官網上有不少 react 的開發教學，如果有公司想要從 react 轉到 angular(或是 angular 轉 react 為主)，\n感覺透過 Nx 的幫助可以慢慢地移花接木(不然 Nx 也至少可以讓這兩框架和平共處 😆)\n\n### Angular 詞彙表\n\n- [Workspace](https://angular.tw/guide/glossary#workspace) (工作區)\n\n  一個 Angular 所有專案的集合(可以用 Angular CLI 操作這個集合)，通常會在 git 版本控制的 repository 中。\n\n- [Project](https://angular.tw/guide/glossary#project) (專案)\n\n  可以通過 Angular CLI 命令創建或修改的獨立應用程式或函式庫。可在 angular.json 中配置 workspace 中的所有 projects。\n\n- [Library](https://angular.tw/guide/glossary#library) (函式庫)\n\n  一種 Angular 專案。用來讓其它 Angular 應用包含它，以提供各種功能。函式庫不是一個完整的 Angular 應用，不能獨立執行。\n\n- [TypeScript 配置](https://angular.tw/guide/typescript-configuration#configuration-files)\n\n  一個 Angular 工作區中包含多個 TypeScript 配置檔案。在 root，有兩個主要的 TypeScript 配置檔案：tsconfig.json 檔案和 tsconfig.app.json 檔案。[使用 extends 進行配置繼承](https://www.typescriptlang.org/docs/handbook/tsconfig-json.html#tsconfig-bases)。\n\n- [Schematic](https://angular.tw/guide/glossary#schematic) (原理圖)\n\n  Angular CLI 使用原理圖來產生和修改 Angular 專案及其部件。\n\n- Collection (集合)\n\n  在 Angular 中，是指收錄在同一個 [npm 套件](https://angular.tw/guide/glossary#npm-package) 中的一組原理圖（schematics）。\n\n  ![](assets/images/2021-12-28-00-23-52.png)\n\n### Nx 名詞解釋\n\n- Generators (產生器)\n  產生器提供了一種方法，來自動執行您在開發工作流程中，經常執行的許多任務。\n  在 Nx 中，可以使用 @nrwl/devkit 或 @angular-devkit ，來製作產生器。\n  使用 @angular-devkit 製作的稱為 schematics (原理圖)\n\n  下圖為 Nx 官網的 sidebar 的一小部分截圖，可以看見 Generator 有不少篇幅介紹。\n\n  ![](assets/images/2021-12-28-21-51-09.png)\n\n### Nx 的 Generators 的使用方式\n\n可以發現 Nx 的 `[plugin]:[generator-name]` 就是 Angular 的 `[collections]:[schematic]`。\n\n有用 angular 寫過 schematic 的人有福了，可以更快上手 Nx 的 generator。🎉\n\n以下是關於如何調用 gnerator 的內容(截自官網):\n\n- [Invoking Plugin Generators](https://nx.dev/l/a/generators/using-schematics#invoking-plugin-generators)\n\n  Generators allow you to create or modify your codebase in a simple and repeatable way. Generators are invoked using the nx generate command.\n\n  ```cmd\n  nx generate [plugin]:[generator-name] [options]\n\n  nx generate @nrwl/angular:component mycmp --project=myapp\n  ```\n\n  It is important to have a clean git working directory before invoking a generator so that you can easily revert changes and re-invoke the generator with different inputs.\n\n### [小補充] 關於 collection 為何都是這樣命名? `@xxx/ooo`\n\n這是 npm 的命名規則，詳情可以參考 npm 官網影片: [Working with npm private modules\n](https://www.youtube.com/watch?v=O6JoXGnHK_Y)\n\n> @後的字稱為 `@scope`，通常是 npm 的帳號名字(尤其要 publish 到 npm 上的話，就是 `@username` 的意思。)\n\n![](assets/images/2021-12-28-21-53-15.png)\n\n## 感受一下 Nx 的 monorepo 專案\n\n- Angular workspace 的 libs 通常都會有一個自己的 `package.json`\n\n  ![](assets/images/2021-12-28-00-29-52.png)\n\n- Nx workspace 預設共用一個 `package.json`\n\n  ![](assets/images/2021-12-28-00-28-00.png)\n\n## 產生一個 Nx 的 workspace\n\nhttps://www.npmjs.com/package/create-nx-workspace\n\n![](assets/images/2021-12-28-21-48-43.png)\n\n## Nx 的 workspace 圖示\n\n除了圖示裡的這些，Nx workspace 也可以用來整合開發其他框架(最後面會補充)。\n\n![](assets/images/2021-12-28-22-18-03.png)\n\n## 快速上手 Nx Console 操作 (Generate、Run)\n\n### Nx Console 簡介\n\n- Nx Console 套件安裝\n\n  - [Install from the VS Code Marketplace](https://marketplace.visualstudio.com/items?itemName=nrwl.angular-console)\n  - [Contribute on GitHub](https://github.com/nrwl/nx-console)\n\n- Nx Console 前生今世\n\n  `Nx Console` 前生為 `Angular Console`，想請可以看這篇文章:\n  https://blog.nrwl.io/re-introducing-nx-console-a21fa9f4f668\n\n  `Angular Console` 是一個桌面應用程式 (Desktop App)。\n\n  最一開始是以 `Electron` 在開發，後來 `Angular Console` 團隊將桌面應用程式移植到 VS Code 的擴充套件上。結果發現效能很糟...\n\n  所以他們就決定打掉重練： 以 VS Code 套件提供的基底重新開發一個擴充套件，\n\n  並且順帶將套件重新命名為 `Nx Console`。\n\n  `Nx Console` 包括 `Angular Console` 和 `Nx` 的功能，最後連 `Nx` 和 `Angular Console` 的製作團隊也整併再一起了。\n\n  ![](assets/images/2021-12-28-22-21-50.png)\n\n- Nx 套件教學\n\n  如果不小心跳過一開始的新手教學，可以到 github 看，`Nx Console` 套件的也是以 `Nx 架構` 寫成的。😎\n\n  https://github.com/nrwl/nx-console/tree/master/apps/vscode/src/getting-started\n\n- Nx Console 官網主打口號\n\n  - True UI for Nx\n  - Useful for both experts and beginners\n  - Documentation\n\n- 介面分三個區塊\n\n  - Generate & Run Target\n    開發專案時常用到的指令。等等下面會講一下 `Generate` 和 `Run`。\n  - Common Nx Commands\n    關於被修改過的檔案會有一些功能可以用，另外還有產生專案相依狀態的圖表、依次執行多個指令的指令可以用。\n  - Projects\n    這裡就是圖示化 `angular.json` 的 `projects` 區塊，可以直接按按鈕執行 script。\n\n    ![](assets/images/2021-12-28-22-35-51.png)\n\n## `nx generate`\n\n當你按下 `Generate` 的按鈕時，就會幫你執行 `nx generate`，並根據 `generator` (`schematic`) 產生預期的結果。\n\n### `nx generate` (常見的 collection)\n\n1. `@angular/cdk`\n2. `@angular/material`\n\n   以上兩個都是 Angular Material 相關 collection。\n\n   ![](assets/images/2021-12-28-22-53-23.png)\n\n3. `@nrwl/storybook`\n\n   Storybook 相關 collection。\n\n4. `@nrwl/angular`\n\n   Nx cli 預設的 collection (1)。\n\n5. `@nrwl/workspace`\n\n   Nx cli 預設的 collection (2)。\n\n6. `@schematics/angular`\n\n   Angular cli 預設的 collection。\n\n### 產生 Library 有三個 schematic 可以用\n\n- `@schematics/angular`\n\n  ![](assets/images/2021-12-28-22-58-21.png)\n\n- `@nrwl/angular`\n\n  ![](assets/images/2021-12-28-22-59-05.png)\n\n  ![](assets/images/2021-12-28-23-00-04.png)\n\n  ![](assets/images/2021-12-28-23-00-23.png)\n\n- `@nrwl/workspace`\n\n  ![](assets/images/2021-12-28-22-59-20.png)\n\n* collection 偵測方式 (node_module/ 全部偵測):\n\n  https://github.com/nrwl/nx-console/blob/ad3578a1a2/libs/server/src/lib/utils/read-collections.ts\n\n* vscode-angular-schematics collection 偵測方式:\n\n  https://github.com/cyrilletuzi/vscode-angular-schematics/blob/main/src/defaults.ts\n\n## `nx run`\n\n同時 build 所有 projects 內有 build script 的專案。\n\n`nx run-many --target=build --all --parallel`\n\n![](assets/images/2021-12-28-23-01-03.png)\n\n- https://angular.tw/cli/run\n- https://nx.dev/l/a/cli/run-many\n\n## 其他補充\n\n### 常見的 Monorepo 架構開發工具\n\n![](assets/images/2021-12-28-23-03-34.png)\n\n還有更多工具: https://github.com/korfuri/awesome-monorepo\n\n### 誤解: Nx 和 Yarn Workspace/Lerna 只能擇一使用?\n\nhttps://nx.dev/l/n/guides/lerna-and-nx#clarifying-misconceptions\n\n![](assets/images/2021-12-28-23-05-05.png)\n\n功能沒有重疊，Nx 不是 package manager 也不是 JS-only 的工具。可一起用。\n\n![](assets/images/2021-12-28-23-05-31.png)\n\nNx 官方 youtube 頻道相關影片\n\n- [How to Migrate From Lerna to Nx](https://www.youtube.com/watch?v=Edv7ZeI8Bwc)\n- [Lerna/Yarn to Nx: Faster Build Times + Better Dev Ergonomics](https://www.youtube.com/watch?v=BO1rwynFBLM)\n\n### 查看有哪些 Nx plugin 可以使用\n\n`nx list`\n\n或到官網查看列表:\nhttps://nx.dev/community#community-plugin-list\n\n### Nx 13\n\n![](assets/images/2021-12-28-23-07-16.png)\n\nWebpack 5 Module Federation Plugin\n\n- https://nx.dev/l/a/guides/setup-mfe-with-angular\n- Micro Frontends with Angular using Module Federation - Manfred Steyer\n\n### Nx 學習資源\n\n- Nx 官網\n\n  https://nx.dev/\n\n- Nx Console for VSCode 介紹\n\n  https://nx.dev/latest/angular/getting-started/console#nx-console-for-vscode\n\n- Github 上用 Nx + Angular 星星數最多的專案 Angular Spotify by Trung Vo\n\n  https://github.com/trungk18/angular-spotify\n\n- Angular Spotify 作者專訪 youtube\n\n  https://youtu.be/w04CfqZI8Xo\n\n- Nx Conf 連結 (2021/9/16-2021/9/17)\n\n  https://youtu.be/oG2QbFquraA\n\n  https://www.youtube.com/watch?v=hlGOaGDsWKg\n\n- 書\n\n  https://connect.nrwl.io/app/books\n\n  https://nrwl.io/products\n","n":0.037}}},{"i":8,"$":{"0":{"v":"2021-1226-First Day","n":0.707},"1":{"v":"\n## 首次使用 Dendron 紀錄\n\n- Build and preview your notes\n\n  - Run this command inside the root of your workspace\n  - This command launches a development server which previews how your published website will look like. Visit http://localhost:3000 to accesss your site.\n  - Enter CTRL-C on the terminal to exit the preview\n    `npx dendron publish dev`\n\n- Publish your notes\n  NOTE: we're running export with the github target\n  `dendron publish export --target github`\n\n  參考資料:\n  https://wiki.dendron.so/notes/yg3EL1x9fEe4NMqxUC3jP/\n","n":0.117}}}]}
